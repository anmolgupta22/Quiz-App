// Generated by Dagger (https://dagger.dev).
package com.example.quizapp.viewModel;

import com.example.quizapp.database.RoomRepository;
import com.example.quizapp.di.QuizRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class QuizViewModelFactory_Factory implements Factory<QuizViewModelFactory> {
  private final Provider<QuizRepository> instanceProvider;

  private final Provider<RoomRepository> roomRepositoryProvider;

  public QuizViewModelFactory_Factory(Provider<QuizRepository> instanceProvider,
      Provider<RoomRepository> roomRepositoryProvider) {
    this.instanceProvider = instanceProvider;
    this.roomRepositoryProvider = roomRepositoryProvider;
  }

  @Override
  public QuizViewModelFactory get() {
    return newInstance(instanceProvider.get(), roomRepositoryProvider.get());
  }

  public static QuizViewModelFactory_Factory create(Provider<QuizRepository> instanceProvider,
      Provider<RoomRepository> roomRepositoryProvider) {
    return new QuizViewModelFactory_Factory(instanceProvider, roomRepositoryProvider);
  }

  public static QuizViewModelFactory newInstance(QuizRepository instance,
      RoomRepository roomRepository) {
    return new QuizViewModelFactory(instance, roomRepository);
  }
}
