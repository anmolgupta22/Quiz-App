// Generated by Dagger (https://dagger.dev).
package com.example.quizapp.di;

import com.example.quizapp.database.RoomRepository;
import com.example.quizapp.viewModel.QuizViewModel;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class RepositoryModule_ProvideMyViewModelFactory implements Factory<QuizViewModel> {
  private final RepositoryModule module;

  private final Provider<QuizRepository> quizRepositoryProvider;

  private final Provider<RoomRepository> roomRepositoryProvider;

  public RepositoryModule_ProvideMyViewModelFactory(RepositoryModule module,
      Provider<QuizRepository> quizRepositoryProvider,
      Provider<RoomRepository> roomRepositoryProvider) {
    this.module = module;
    this.quizRepositoryProvider = quizRepositoryProvider;
    this.roomRepositoryProvider = roomRepositoryProvider;
  }

  @Override
  public QuizViewModel get() {
    return provideMyViewModel(module, quizRepositoryProvider.get(), roomRepositoryProvider.get());
  }

  public static RepositoryModule_ProvideMyViewModelFactory create(RepositoryModule module,
      Provider<QuizRepository> quizRepositoryProvider,
      Provider<RoomRepository> roomRepositoryProvider) {
    return new RepositoryModule_ProvideMyViewModelFactory(module, quizRepositoryProvider, roomRepositoryProvider);
  }

  public static QuizViewModel provideMyViewModel(RepositoryModule instance,
      QuizRepository quizRepository, RoomRepository roomRepository) {
    return Preconditions.checkNotNullFromProvides(instance.provideMyViewModel(quizRepository, roomRepository));
  }
}
