// Generated by Dagger (https://dagger.dev).
package com.example.quizapp.ui;

import com.example.quizapp.viewModel.QuizViewModel;
import com.example.quizapp.viewModel.QuizViewModelFactory;
import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import dagger.internal.QualifierMetadata;
import javax.inject.Provider;

@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class QuizFragment_MembersInjector implements MembersInjector<QuizFragment> {
  private final Provider<QuizViewModel> viewModelProvider;

  private final Provider<QuizViewModelFactory> quizViewModelFactoryProvider;

  public QuizFragment_MembersInjector(Provider<QuizViewModel> viewModelProvider,
      Provider<QuizViewModelFactory> quizViewModelFactoryProvider) {
    this.viewModelProvider = viewModelProvider;
    this.quizViewModelFactoryProvider = quizViewModelFactoryProvider;
  }

  public static MembersInjector<QuizFragment> create(Provider<QuizViewModel> viewModelProvider,
      Provider<QuizViewModelFactory> quizViewModelFactoryProvider) {
    return new QuizFragment_MembersInjector(viewModelProvider, quizViewModelFactoryProvider);
  }

  @Override
  public void injectMembers(QuizFragment instance) {
    injectViewModel(instance, viewModelProvider.get());
    injectQuizViewModelFactory(instance, quizViewModelFactoryProvider.get());
  }

  @InjectedFieldSignature("com.example.quizapp.ui.QuizFragment.viewModel")
  public static void injectViewModel(QuizFragment instance, QuizViewModel viewModel) {
    instance.viewModel = viewModel;
  }

  @InjectedFieldSignature("com.example.quizapp.ui.QuizFragment.quizViewModelFactory")
  public static void injectQuizViewModelFactory(QuizFragment instance,
      QuizViewModelFactory quizViewModelFactory) {
    instance.quizViewModelFactory = quizViewModelFactory;
  }
}
