// Generated by Dagger (https://dagger.dev).
package com.example.quizapp.di;

import android.app.Application;
import com.example.quizapp.database.DBHelper;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class DatabaseModule_ProvidesDatabaseFactory implements Factory<DBHelper> {
  private final DatabaseModule module;

  private final Provider<Application> applicationProvider;

  public DatabaseModule_ProvidesDatabaseFactory(DatabaseModule module,
      Provider<Application> applicationProvider) {
    this.module = module;
    this.applicationProvider = applicationProvider;
  }

  @Override
  public DBHelper get() {
    return providesDatabase(module, applicationProvider.get());
  }

  public static DatabaseModule_ProvidesDatabaseFactory create(DatabaseModule module,
      Provider<Application> applicationProvider) {
    return new DatabaseModule_ProvidesDatabaseFactory(module, applicationProvider);
  }

  public static DBHelper providesDatabase(DatabaseModule instance, Application application) {
    return Preconditions.checkNotNullFromProvides(instance.providesDatabase(application));
  }
}
