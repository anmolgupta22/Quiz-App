// Generated by Dagger (https://dagger.dev).
package com.example.quizapp.viewModel;

import com.example.quizapp.database.RoomRepository;
import com.example.quizapp.di.QuizRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class QuizViewModel_Factory implements Factory<QuizViewModel> {
  private final Provider<QuizRepository> repositoryProvider;

  private final Provider<RoomRepository> roomRepositoryProvider;

  public QuizViewModel_Factory(Provider<QuizRepository> repositoryProvider,
      Provider<RoomRepository> roomRepositoryProvider) {
    this.repositoryProvider = repositoryProvider;
    this.roomRepositoryProvider = roomRepositoryProvider;
  }

  @Override
  public QuizViewModel get() {
    return newInstance(repositoryProvider.get(), roomRepositoryProvider.get());
  }

  public static QuizViewModel_Factory create(Provider<QuizRepository> repositoryProvider,
      Provider<RoomRepository> roomRepositoryProvider) {
    return new QuizViewModel_Factory(repositoryProvider, roomRepositoryProvider);
  }

  public static QuizViewModel newInstance(QuizRepository repository,
      RoomRepository roomRepository) {
    return new QuizViewModel(repository, roomRepository);
  }
}
